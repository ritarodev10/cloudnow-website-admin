---
alwaysApply: false
---

# Push Workflow and Build Validation

## Complete Push Workflow

### Step-by-Step Process:

1. **Run Build Validation**:

   ```bash
   npm run pre-push
   ```

2. **If Build Passes, Commit Changes**:

   ```bash
   git add .
   git commit -m "Your commit message"
   ```

3. **Push to Repository**:
   ```bash
   git push origin main
   ```

### Complete Workflow Command:

```bash
npm run pre-push && git add . && git commit -m "Your commit message" && git push origin main
```

## Build Validation Process

### What `npm run pre-push` Does:

1. Run TypeScript type checking (`npm run type-check`)
2. Run ESLint with zero warnings allowed (`npm run lint`)
3. Build the project (`npm run build`)

### If Build Fails:

- **DO NOT PUSH** until all issues are resolved
- Fix TypeScript errors first
- Fix ESLint warnings/errors
- Ensure all imports are correct
- Verify all components are properly exported

## Quick Reference:

**One-command workflow:**

```bash
npm run pre-push && git add . && git commit -m "feat: add new feature" && git push origin main
```

**Step-by-step workflow:**

```bash
# 1. Validate build
npm run pre-push

# 2. Stage changes
git add .

# 3. Commit with message
git commit -m "feat: add new feature"

# 4. Push to repository
git push origin main
```

## Deployment Safety:

- Never push code that fails the build process
- Always test locally before pushing
- Use descriptive commit messages
- Push to the correct branch (usually `main`)

Remember: **A failed build means a failed deployment. Always build first, push second.**
